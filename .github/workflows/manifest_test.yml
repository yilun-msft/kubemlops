name: Manifest_Test
# The pipeline is triggered on:
#  - PR to master (code_quality_checks only)
#  - Push to master (full cycle)
#  - PR comment "/build-images" (code_quality_checks + build images)
#  - PR comment "/build-pipeline" (code_quality_checks + build kfp pipeline)
on:
  push:
    branches: [master]
#   pull_request:
#     branches: [master]
  issue_comment:
    types: [created]

jobs:
  build_images_for_manifest_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
#       - name: Azure Login
#         uses: Azure/login@v1
#         with:
#           # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
#           # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
#           enable-AzPSSession: true
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v1
        with:
          # Version of kubectl
          version: latest
      - name: Create Resource Group
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal --username ${{ secrets.APP_ID }} --password ${{ secrets.PASSWORD }} --tenant ${{ secrets.TENANT_ID }}
          az group create -n kf-test-rg -l westus2
      - name: Install curl
        run: sudo apt install curl
      - name: Apply Resources
        run: |
          az aks create -g kf-test-rg -n kf-test-cluster -s Standard_D4s_v3 -c 2 -l westus2 --service-principal ${{ secrets.APP_ID }} --client-secret ${{ secrets.PASSWORD }} --generate-ssh-keys
          az aks get-credentials -n kf-test-cluster -g kf-test-rg 
          mkdir kubeflow
          cd kubeflow
          curl -LO https://github.com/kubeflow/kfctl/releases/download/v1.1.0/kfctl_v1.1.0-0-g9a3621e_linux.tar.gz
          tar -xvf kfctl_v1.1.0-0-g9a3621e_linux.tar.gz
          export BASE_DIR=$(pwd)
          echo base dir is ${BASE_DIR}
          export PATH=$PATH:$(pwd)
          export KF_NAME=kf-test
          export KF_DIR=${BASE_DIR}/${KF_NAME}
          mkdir -p ${KF_DIR}
          cd ${KF_DIR}
          echo kf dir is ${KF_DIR}
          kfctl -h
          curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.6.8 TARGET_ARCH=x86_64 sh -
          cd istio-1.6.8
          export PATH=$PWD/bin:$PATH
          istioctl install --set profile=demo
          kubectl label namespace default istio-injection=enabled
          cd ${KF_DIR}
          echo currently at $(pwd)
          echo ${PATH}
          kfctl apply -V -f https://raw.githubusercontent.com/kubeflow/manifests/v1.1-branch/kfdef/kfctl_azure.v1.1.0.yaml
#       - name: Claim Azure Kubernete cluster
#         run: az aks create -g kf-test-rg -n kf-test-cluster -s Standard_D4s_v3 -c 2 -l westus2 --service-principal ${{ secrets.APP_ID }} --client-secret ${{ secrets.PASSWORD }} --generate-ssh-keys 
#       - name: Get credentials
#         run: az aks get-credentials -n kf-test-cluster -g kf-test-rg
#       - name: Download Istio
#         run: |
#           curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.6.8 TARGET_ARCH=x86_64 sh -
#           cd istio-1.6.8
#           export PATH=$PWD/bin:$PATH
#           istioctl install --set profile=demo
#           kubectl label namespace default istio-injection=enabled
#       - name: Apply the resource
#         run: |
#           cd ${KF_DIR}
#           echo currently at $(pwd)
#           echo ${PATH}
#           kfctl apply -V -f https://raw.githubusercontent.com/kubeflow/manifests/v1.1-branch/kfdef/kfctl_azure.v1.1.0.yaml
      - name: Run Test Script
        run: |
          pip install kfp
          python manifest_tests.py
        working-directory: code/tests
        env:
          PR_NUM: ${{ github.event.issue.number }}
#       - name: Clean up resources
#         run: az group delete --name kf-test-rg
